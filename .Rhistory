knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(tibble)
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
weatherAU <- read.csv("weatherAUS.csv")
weatherAU
rm(airlines, airports, flights, planes, weather)
str(weatherAU)
str(weatherAU)
is.na(weatherAU) %>% colSums()
knitr::opts_chunk$set(echo = TRUE)
airlines <- as.data.frame(nycflights13::airlines)
airports <- as.data.frame(nycflights13::airports)
flights <- as.data.frame(nycflights13::flights)
planes <- as.data.frame(nycflights13::planes)
weather <- as.data.frame(nycflights13::weather)
head(airlines)
head(airports)
head(flights)
head(planes)
head(weather)
rm(ls())
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
weatherAU <- read.csv("weatherAUS.csv")
weatherAU
str(weatherAU)
is.na(weatherAU) %>% colSums()
str(weatherAU)
colSums(is.na(weatherAU))
nrow(weatherAU)/100
322/nrow(weatherAU)*100
1406/nrow(weatherAU)*100
60843/nrow(weatherAU)*100
9330/nrow(weatherAU)*100
prop.table(table(weatherAU))
prop.table(table(weatherAU$RainTomorrow))
colSums(is.na(weatherAU))/nrow(weatherAU)
summary(weatherAU)
colSums(is.na(weatherAU))
colSums(is.na(weatherAU))/nrow(weatherAU)
str(weatherAU)
cat("")
colSums(is.na(weatherAU))
cat("")
colSums(is.na(weatherAU))/nrow(weatherAU)
colSums(is.na(weatherAU))
cat(" ")
colSums(is.na(weatherAU))/nrow(weatherAU)
colSums(is.na(weatherAU))
cat("\n")
colSums(is.na(weatherAU))/nrow(weatherAU)
weatherAU$Date <- as.Date(weatherAU$Date)
head(weatherAU)
print(i)
for (i in col(weatherAU)) {
print(i)
}
col(weatherAU)
for (i in colnames(weatherAU)) {
print(i)
}
for (i in 1:length(weatherAU)) {
print(i)
# print()
}
for (i in 1:length(weatherAU)) {
print(i)
print(colnames(weatherAU)[i])
# print()
}
for (i in 1:length(weatherAU)) {
for (i in 1:length(weatherAU)) {
paste0("Unique values in ", colnames(weatherAU)[i], ": ", unique(weatherAU[,i]))
}
for (i in 1:length(weatherAU)) {
paste0("Unique values in ", colnames(weatherAU)[i], ": ", unique(weatherAU[,i]))
}
q
for (i in 1:length(weatherAU)) {
paste0("Unique values in ", colnames(weatherAU)[i], ": ", unique(weatherAU[,i]))
}
for (i in 1:length(weatherAU)) {
paste0("Unique values in ", colnames(weatherAU)[i], ": ", unique(weatherAU[,i]))
}
for (i in 1:length(weatherAU)) {
print(paste0("Unique values in ", colnames(weatherAU)[i], ": ", unique(weatherAU[,i])))
}
unique(weatherAU[,1])
unique(weatherAU[,2])
for (i in 2:length(weatherAU)) {
print(paste0("Unique values in ", colnames(weatherAU)[i], ":"))
unique(weatherAU[,i]))
for (i in 2:length(weatherAU)) {
print(paste0("Unique values in ", colnames(weatherAU)[i], ":"))
unique(weatherAU[,i])
}
for (i in 2:length(weatherAU)) {
print(paste0("Unique values in ", colnames(weatherAU)[i], ":"))
print(unique(weatherAU[,i]))
}
for (cate in 1:length(weatherAU)) {
category <- ifelse(class(weatherAU[,cate]) == "factor", colnames(weatherAU)[cate], NULL)
}
categorical <- vector()
for (i in 1:length(weatherAU)) {
if (class(weatherAU[,i]) == "factor") {
category <- colnames(weatherAU)[i]
categorical <- c(categorical, category)
}
}
categorical
# print unique values in each categorical variable
for (i in 2:length(categorical)) {
print(paste0("Unique values in ", colnames(weatherAU$categorical[i]), ":"))
print(unique(weatherAU$categorical[i]))
}
colnames(weatherAU$categorical[1])
categorical[1]
# print unique values in each categorical variable
for (i in 2:length(categorical)) {
print(paste0("Unique values in ", colnames(weatherAU[,categorical[i]]), ":"))
print(unique(weatherAU[,categorical[i]]))
}
colnames(weatherAU[,categorical[1]])
categorical[1]
colnames(weatherAU[,"Location"])
colnames(weatherAU[,Location])
colnames(weatherAU$Location)
# print unique values in each categorical variable
for (i in 2:length(categorical)) {
print(paste0("Unique values in ", categorical[i], ":"))
print(unique(weatherAU[,categorical[i]]))
}
# print unique values in each categorical variable
for (i in 2:length(categorical)) {
print(paste0("Unique values in ", categorical[i], ":"))
print(unique(weatherAU[,categorical[i]]))
print(cat("\n"))
}
# print unique values in each categorical variable
for (i in 2:length(categorical)) {
print(paste0("Unique values in ", categorical[i], ":"))
print(levels(weatherAU[,categorical[i]]))
print(cat("\n"))
}
# print unique values in each categorical variable
for (i in 1:length(categorical)) {
print(paste0("Unique values in ", categorical[i], ":"))
print(levels(weatherAU[,categorical[i]]))
print(cat("\n"))
}
# print unique values in each categorical variable
for (i in 1:length(categorical)) {
print(paste0("Unique values in ", categorical[i], ":"))
print(levels(weatherAU[,categorical[i]]))
# print(cat("\n"))
}
categorical <- vector()
for (i in 1:length(weatherAU)) {
if (class(weatherAU[,i]) == "factor") {
category <- colnames(weatherAU)[i]
categorical <- c(categorical, category)
}
}
# print unique values in each categorical variable
for (i in 1:length(categorical)) {
print(paste0("Unique values in ", categorical[i], ":"))
print(levels(weatherAU[,categorical[i]]))
# print(cat("\n"))
}
table(weatherAU$Location)
table(weatherAU$Location, order())
sort(table(weatherAU$Location), decreasing = T)
categorical <- vector()
for (i in 1:length(weatherAU)) {
if (class(weatherAU[,i]) == "factor") {
category <- colnames(weatherAU)[i]
categorical <- c(categorical, category)
}
}
# print unique values in each categorical variable
for (i in 1:length(categorical)) {
print(paste0("Unique values in ", categorical[i], ":"))
print(levels(weatherAU[,categorical[i]]))
# print(cat("\n"))
}
categorical <- vector()
weatherAU[,categorical]
print(weatherAU[,categorical])
categorical <- vector()
categorical <- vector()
for (i in 1:length(weatherAU)) {
if (class(weatherAU[,i]) == "factor") {
category <- colnames(weatherAU)[i]
categorical <- c(categorical, category)
}
}
weatherAU[,categorical]
for (i in 1:length(weatherAU)-1) {
if (class(weatherAU[,i]) == "factor") {
category <- colnames(weatherAU)[i]
categorical <- c(categorical, category)
}
}
weatherAU[,categorical]
for (i in 1:(length(weatherAU)-1)) {
if (class(weatherAU[,i]) == "factor") {
category <- colnames(weatherAU)[i]
categorical <- c(categorical, category)
}
}
categorical <- vector()
for (i in 1:(length(weatherAU)-1)) {
if (class(weatherAU[,i]) == "factor") {
category <- colnames(weatherAU)[i]
categorical <- c(categorical, category)
}
}
weatherAU[,categorical]
DF <- weatherAU[,-categorical]
DF <- weatherAU[,-(categorical)]
library(tidyverse)
DF <- weatherAU %>%
select(-(categorical))
DF
DF <- weatherAU %>%
select(-(categorical))
DF
col(DF)
ncol(DF)
head(DF)
ncol(DF)
head(DF)
colSums(is.na(weatherAU))
cat("\n")
colSums(is.na(weatherAU))/nrow(weatherAU)
colSums(is.na(DF))
cat("\n")
colSums(is.na(DF))/nrow(DF)
summary(DF)
quantile(DF$Rainfall)
quantile(DF$Rainfall, na.rm = T)
min(DF$Rainfall)
min(DF$Rainfall, na.rm = T)
mean(DF$Rainfall, na.rm = T)
colnames(DF)
DF <- weatherAU %>%
select(-(categorical)) %>%
select(-RISK_MM)
head(DF)
colnames(DF)
colnames(DF)[2:18]
DF %>% pivot_longer(cols = colnames(DF)[2:18], names_to = "Type", values_to = "Value") %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type))
DF %>% pivot_longer(cols = colnames(DF)[2:17], names_to = "Type", values_to = "Value") %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type))
DF %>% select(colnames(DF)[2:17])
DF %>% select(colnames(DF)[2:17]) %>%
pivot_longer(cols = colnames(DF)[1:16], names_to = "Type", values_to = "Value")
DF
DF %>% select(colnames(DF)[2:17])
DF %>% select(colnames(DF)[2:17]) %>%
pivot_longer(cols = colnames(DF)[1:16], names_to = "Type", values_to = "Value")
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value")
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Value = as.numeric(Value))
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Value = as.numeric(Value)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F)
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Value = as.numeric(Value)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F) %>%
facet_null(~Type)
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Value = as.numeric(Value)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F) %>%
facet_null(Type)
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Value = as.numeric(Value)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F) %>%
facet_wrap(~Type)
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Value = as.numeric(Value)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F) %>%
facet_wrap(~as.factor(Type))
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Value = as.numeric(Value),
Type = as.factor(Type)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F) %>%
facet_wrap(~Type)
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Type = as.factor(Type)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F) %>%
facet_wrap(~Type)
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Type = as.factor(Type))
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Type = as.factor(Type)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F) +
facet_wrap(~Type)
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Type = as.factor(Type)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F)
is.na(DF)
colSums(is.na(DF))
sum(is.na(DF))
DF1 <- DF
replace_na(data = DF1$MinTemp, replace = mean)
replace_na(data = DF1$MinTemp, replace = median(DF1$MinTemp))
replace_na(data = DF1$MinTemp, replace = median(DF1$MinTemp)) %>% is.na()
replace_na(data = DF1$MinTemp, replace = median(DF1$MinTemp))
replace_na(data = DF1$MinTemp, replace = median(DF1$MinTemp))
replace_na(data = DF1$MinTemp, replace = median(DF1$MinTemp, na.rm = T))
replace_na(data = DF1$MinTemp, replace = median(DF1$MinTemp, na.rm = T)) %>% anyNA()
median(DF1$MinTemp, na.rm = T)
median(DF1$MinTemp, na.rm = F)
DF1$MinTemp
DF
for (i in 2:(length(DF)-1)) {
DF <- DF %>%
replace_na(data = DF[,i], replace = median(DF[,i], na.rm = T))
}
for (i in 2:(length(DF)-1)) {
DF <- DF %>%
mutate(replace_na(data = DF[,i], replace = median(DF[,i], na.rm = T)))
}
anyNA(DF)
colSums(is.na(DF))
DF <- weatherAU %>%
select(-(categorical)) %>%
select(-RISK_MM)
head(DF)
rm(DF1)
for (i in 2:(length(DF)-1)) {
DF[,i] <- replace_na(data = DF[,i], replace = median(DF[,i], na.rm = T))
}
colSums(is.na(DF))
DF %>% select(colnames(.)[2:17]) %>%
pivot_longer(cols = colnames(.)[1:16], names_to = "Type", values_to = "Value") %>%
mutate(Type = as.factor(Type)) %>%
ggplot(aes(x = Type,
y = Value)) +
coord_flip() +
geom_boxplot(aes(fill = Type), show.legend = F)
anyNA(DF)
plot(DF$Date, DF$RainTomorrow)
DF <- weatherAU %>%
select(-(categorical)) %>%
select(-c(Date, RISK_MM))
head(DF)
colSums(is.na(DF))
cat("\n")
colSums(is.na(DF))/nrow(DF)
for (i in 1:(length(DF)-1)) {
DF[,i] <- replace_na(data = DF[,i], replace = median(DF[,i], na.rm = T))
}
anyNA(DF)
table(DF$RainTomorrow)
prop.table(DF$RainTomorrow)
table(DF$RainTomorrow)
prop.table(table(DF$RainTomorrow))
